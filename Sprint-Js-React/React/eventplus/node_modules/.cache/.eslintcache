[{"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\index.js":"1","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\App.js":"2","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\reportWebVitals.js":"3","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\TestePage\\TestePage.jsx":"4","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\HomePage\\HomePage.jsx":"5","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\LoginPage\\LoginPage.jsx":"6","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\EventosPage\\EventosPage.jsx":"7","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\TipoEventosPage\\TipoEventosPage.jsx":"8","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Header\\Header.jsx":"9","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Footer\\Footer.jsx":"10","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Input\\Input.jsx":"11","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Button\\Button.jsx":"12","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Nav\\Nav.jsx":"13","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Container\\Container.jsx":"14","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\PerfilUsuario\\PerfilUsuario.jsx":"15","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Title\\Title.jsx":"16","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\MainContent\\MainContent.jsx":"17","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Banner\\Banner.jsx":"18","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\ContactSection\\ContactSection.jsx":"19","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\VisionSection\\VisionSection.jsx":"20","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\NextEvent\\NextEvent.jsx":"21","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Utils\\stringFunction.js":"22","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Services\\Service.js":"23","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\ImageIllustrator\\ImageIllustrator.jsx":"24","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\FormComponents\\FormComponents.jsx":"25","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\TipoEventosPage\\TableTp\\TableTp.jsx":"26","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Notification\\Notification.jsx":"27","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Spinner\\Spinner.jsx":"28","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\EventosPage\\TableE\\TableE.jsx":"29","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\context\\AuthContext.js":"30","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Routes\\routes.js":"31","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Routes\\PrivateRoute.jsx":"32"},{"size":552,"mtime":1699292810969,"results":"33","hashOfConfig":"34"},{"size":517,"mtime":1701374912410,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1699292810969,"results":"36","hashOfConfig":"34"},{"size":472,"mtime":1699555293670,"results":"37","hashOfConfig":"34"},{"size":2038,"mtime":1701288253127,"results":"38","hashOfConfig":"34"},{"size":4441,"mtime":1701371142015,"results":"39","hashOfConfig":"34"},{"size":15216,"mtime":1700854495664,"results":"40","hashOfConfig":"34"},{"size":9694,"mtime":1700674278572,"results":"41","hashOfConfig":"34"},{"size":1019,"mtime":1701288942394,"results":"42","hashOfConfig":"34"},{"size":357,"mtime":1699473096043,"results":"43","hashOfConfig":"34"},{"size":500,"mtime":1699292810922,"results":"44","hashOfConfig":"34"},{"size":195,"mtime":1699292810922,"results":"45","hashOfConfig":"34"},{"size":1726,"mtime":1701461078954,"results":"46","hashOfConfig":"34"},{"size":228,"mtime":1699292810922,"results":"47","hashOfConfig":"34"},{"size":1351,"mtime":1701371511776,"results":"48","hashOfConfig":"34"},{"size":433,"mtime":1699468262884,"results":"49","hashOfConfig":"34"},{"size":242,"mtime":1699387257873,"results":"50","hashOfConfig":"34"},{"size":199,"mtime":1699387022388,"results":"51","hashOfConfig":"34"},{"size":869,"mtime":1699468177517,"results":"52","hashOfConfig":"34"},{"size":727,"mtime":1699468463273,"results":"53","hashOfConfig":"34"},{"size":1105,"mtime":1700767095704,"results":"54","hashOfConfig":"34"},{"size":652,"mtime":1700767183488,"results":"55","hashOfConfig":"34"},{"size":212,"mtime":1699647153698,"results":"56","hashOfConfig":"34"},{"size":569,"mtime":1699982677986,"results":"57","hashOfConfig":"34"},{"size":1673,"mtime":1700853066171,"results":"58","hashOfConfig":"34"},{"size":2273,"mtime":1700590288617,"results":"59","hashOfConfig":"34"},{"size":2416,"mtime":1700251040842,"results":"60","hashOfConfig":"34"},{"size":387,"mtime":1700251063623,"results":"61","hashOfConfig":"34"},{"size":3533,"mtime":1700767092439,"results":"62","hashOfConfig":"34"},{"size":369,"mtime":1701288258942,"results":"63","hashOfConfig":"34"},{"size":1403,"mtime":1701453435884,"results":"64","hashOfConfig":"34"},{"size":253,"mtime":1701375267347,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"9218k1",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"69"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\index.js",[],[],["172"],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\App.js",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\reportWebVitals.js",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\TestePage\\TestePage.jsx",["173"],[],"import React, {useEffect, useState} from 'react';\r\nimport './TestePage.css'\r\n\r\nconst TestePage = () => {\r\n  const [count, setCount] = useState(10);\r\n  const [calculation, setCalculation] = useState(10);\r\n\r\n  useEffect(() =>{\r\n    setCalculation(count * 2)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <p>Count: {count}</p>\r\n      <button onClick={() => setCount((c) => c + 1)}>+</button>\r\n      <p>Calculation: {calculation}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestePage;\r\n","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\HomePage\\HomePage.jsx",["174"],[],"import React, { useContext, useEffect, useState } from 'react';\r\nimport './HomePage.css'\r\nimport MainContent from '../../Components/MainContent/MainContent';\r\nimport Banner from '../../Components/Banner/Banner';\r\nimport VisionSection from '../../Components/VisionSection/VisionSection';\r\nimport ContactSection from '../../Components/ContactSection/ContactSection';\r\nimport NextEvent from '../../Components/NextEvent/NextEvent';\r\nimport Container from '../../Components/Container/Container';\r\nimport Title from '../../Components/Title/Title';\r\nimport api from '../../Services/Service';\r\nimport { UserContext } from '../../context/AuthContext';\r\nconst HomePage = () => {\r\n  const {userData} =useContext(UserContext)\r\n    useEffect(() => {\r\n      //chamar a api\r\n      async function getProximosEventos() {\r\n        try {\r\n          const promise = await api.get(\r\n            \"/Evento/ListarProximos\"\r\n          );\r\n          setNextEvents(promise.data);\r\n        } catch (error) {\r\n          console.error(\"Erro : \" + error);\r\n          alert(\"Erro ao carregar os eventos\");\r\n        }\r\n      }\r\n  \r\n      getProximosEventos();\r\n      console.log(\"A HOME FOI MONTADA!\")\r\n    }, []);\r\n  \r\n    // fake mock - api mocada\r\n    const [nextEvents, setNextEvents] = useState([]);\r\n  \r\n    return (\r\n      <MainContent>\r\n        <Banner />\r\n        <section className=\"proximos-eventos\">\r\n          <Container>\r\n            <Title titleText={\"Próximos Eventos\"} />\r\n  \r\n            <div className=\"events-box\">\r\n              {nextEvents.map((event) => (\r\n                <NextEvent\r\n                  key={event.idEvento}\r\n                  title={event.nomeEvento}\r\n                  description={event.descricao}\r\n                  eventDate={event.dataEvento}\r\n                  idEvento={event.idEvento}\r\n                />\r\n              ))}\r\n            </div>\r\n          </Container>\r\n          <VisionSection />\r\n          <ContactSection />\r\n        </section>\r\n      </MainContent>\r\n    );\r\n  };\r\n  \r\n  export default HomePage;\r\n  \r\n  ",["175"],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\LoginPage\\LoginPage.jsx",["176","177"],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\EventosPage\\EventosPage.jsx",["178","179","180"],[],"import React, { useState, useEffect } from 'react';\r\nimport Title from '../../Components/Title/Title';\r\nimport MainContent from '../../Components/MainContent/MainContent';\r\nimport Container from '../../Components/Container/Container';\r\nimport ImageIllustrator from '../../Components/ImageIllustrator/ImageIllustrator';\r\nimport eventImage from '../../assets/images/evento.svg';\r\nimport { Input } from '../../Components/FormComponents/FormComponents';\r\nimport { Button } from '../../Components/FormComponents/FormComponents';\r\nimport { Select } from '../../Components/FormComponents/FormComponents';\r\nimport TableE from './TableE/TableE';\r\nimport api from '../../Services/Service';\r\nimport Notification from '../../Components/Notification/Notification';\r\nimport Spinner from '../../Components/Spinner/Spinner';\r\n\r\n\r\nconst EventosPage = () => {\r\n    const [frmEdit, setFrmEdit] = useState(false);\r\n    const [nome, setNome] = useState(\"\");\r\n    const [descricao, setDescricao] = useState(\"\");\r\n    const [tipoEvento, setTipoEvento] = useState([]);\r\n    const [data, setData] = useState(\"\");\r\n    const [eventos, setEventos] = useState([]);\r\n    const [notifyUser, setNotifyUser] = useState({});\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n    const [idEvento, setIdEvento] = useState(\"\");\r\n    const [idTipoEvento, setIdTipoEvento] = useState(\"\");\r\n    const [idInstituicao, setIdInstituicao] = useState(\"e981052e-4b4d-4beb-a7e6-c72e2121ccfa\")\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //chamar a api\r\n        async function getListarEventos() {\r\n            setShowSpinner(true)\r\n            try {\r\n                const promise = await api.get(\r\n                    \"/Evento\"\r\n                \r\n                );\r\n                const promesa = await api.get(\r\n                    \"/TiposEvento\"\r\n                )\r\n                setEventos(promise.data);\r\n                setTipoEvento(promesa.data);\r\n            } catch (error) {\r\n                console.error(\"Erro : \" + error);\r\n                alert(\"Erro ao carregar os eventos\");\r\n            }\r\n            setShowSpinner(false)\r\n        }\r\n\r\n        getListarEventos();\r\n        console.log(\"A HOME FOI MONTADA!\")\r\n    }, []);\r\n\r\n\r\n\r\n    async function handleUpdate(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const retorno = await api.put(`/Evento/${idEvento}`, {\r\n                nomeEvento: nome,\r\n                descricao,\r\n                dataEvento: data,\r\n                idTipoEvento: idTipoEvento,\r\n                idInstituicao\r\n            })\r\n            \r\n            const retornoGet = await api.get(\"/Evento\")\r\n            setEventos(retornoGet.data)\r\n            setNotifyUser({\r\n                titleNote: \"Sucesso\",\r\n                textNote: `Atualizado com sucesso!`,\r\n                imgIcon: \"success\",\r\n                imgAlt:\r\n                    \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n                showMessage: true,\r\n            });\r\n            ResetForm();\r\n            setFrmEdit(false)\r\n\r\n        } catch (error) {\r\n            alert(\"Deu ruim\")\r\n        }\r\n    }\r\n\r\n    async function handleSubimit(e) {\r\n        e.preventDefault()\r\n        if (nome.trim().length < 3) {\r\n            setNotifyUser({\r\n                titleNote: \"Aviso\",\r\n                textNote: `nome deve possuir mais de 3 caracteres`,\r\n                imgIcon: \"warning\",\r\n                imgAlt:\r\n                    \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n                showMessage: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const retorno = await api.post(\"/Evento\", { \r\n                nomeEvento: nome, \r\n                descricao: descricao, \r\n                idTipoEvento: idTipoEvento, \r\n                dataEvento: data, \r\n                idInstituicao: idInstituicao \r\n            })\r\n            setNotifyUser({\r\n                titleNote: \"Sucesso\",\r\n                textNote: `Cadastrado com sucesso!`,\r\n                imgIcon: \"success\",\r\n                imgAlt:\r\n                    \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n                showMessage: true,\r\n            });\r\n            console.log(retorno.data);\r\n            ResetForm();\r\n            const retornoGet = await api.get(\"/Evento\")\r\n            setEventos(retornoGet.data)\r\n\r\n        } catch (error) {\r\n            console.log(\"Deu erro na api\")\r\n        }\r\n    }\r\n\r\n    function ResetForm(){\r\n        setNome(\"\");\r\n        setIdEvento(\"\");\r\n        setData(\"\");\r\n        setDescricao(\"\");\r\n        setIdTipoEvento(\"\")\r\n    }\r\n\r\n\r\n\r\n\r\n    //TROCAR PARA A TELA DE EDICAO\r\n    async function showUpdateForm(idElemento) {\r\n        setFrmEdit(true);\r\n        //Fazer um get para pegar os dados\r\n        \r\n        try {\r\n            const retorno = await api.get('/Evento/'+ idElemento)\r\n\r\n            \r\n            setNome(retorno.data.nomeEvento)\r\n            setDescricao(retorno.data.descricao)\r\n            setIdTipoEvento(retorno.data.idTipoEvento)\r\n            setData(retorno.data.dataEvento.substr(0,10))\r\n            setIdEvento(retorno.data.idEvento)\r\n        } catch (error) {\r\n            alert(\"Nao foi possivel mostrar a tela de edicão. Tente novamente\")\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    async function handleDelete(idEvento) {\r\n        try {\r\n            const retorno = await api.delete(`/Evento/${idEvento}`)\r\n            const retornoGet = await api.get(\"/Evento\")\r\n            setEventos(retornoGet.data)\r\n            setNotifyUser({\r\n                titleNote: \"Sucesso\",\r\n                textNote: `Deletado com sucesso!`,\r\n                imgIcon: \"success\",\r\n                imgAlt:\r\n                    \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n                showMessage: true,\r\n            });\r\n        } catch (error) {\r\n            console.log(\"Erro ao excluir\");\r\n        }\r\n\r\n    }\r\n\r\n    function editActionAbort() {\r\n        setFrmEdit(false);\r\n        ResetForm();\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <MainContent>\r\n            <Notification {...notifyUser} setNotifyUser={setNotifyUser} />\r\n            {showSpinner ? <Spinner /> : null}\r\n            <section className=\"cadastro-evento-section\">\r\n                <Container>\r\n                    <div className=\"cadastro-evento__box\">\r\n                        <Title\r\n                            titleText={\"Eventos\"}\r\n                        />\r\n\r\n\r\n                        <ImageIllustrator\r\n                            alterText={\"\"}\r\n                            imageRender={eventImage}\r\n                        />\r\n\r\n                        <form className=\"ftipo-evento\" onSubmit={frmEdit ? handleUpdate : handleSubimit}>\r\n                            {!frmEdit ?\r\n                                (<>\r\n                                    {/* ******************************Cadastrar****************************** */}\r\n\r\n\r\n                                    {/* Nome */}\r\n                                    <Input\r\n                                        id={\"id\"}\r\n                                        placeholder={\"Nome\"}\r\n                                        name={\"nome\"}\r\n                                        type={\"text\"}\r\n                                        required={\"required\"}\r\n                                        value={nome}\r\n                                        manipulationFunction={\r\n                                            (e) => {\r\n                                                setNome(e.target.value)\r\n                                            }\r\n                                        }\r\n                                    />\r\n                                    {/* Descricao */}\r\n                                    <Input\r\n                                        id={\"id\"}\r\n                                        placeholder={\"Descricao\"}\r\n                                        name={\"descricao\"}\r\n                                        type={\"text\"}\r\n                                        required={\"required\"}\r\n                                        value={descricao}\r\n                                        manipulationFunction={\r\n                                            (e) => {\r\n                                                setDescricao(e.target.value)\r\n                                            }\r\n                                        }\r\n                                    />\r\n\r\n                                    {/* Tipo Evento */}\r\n                                    <Select\r\n                                     id={\"id\"}\r\n                                     name={\"tipo\"}\r\n                                     required={\"required\"}\r\n                                     dados={tipoEvento}\r\n                                     defaultValue={idTipoEvento}\r\n                                     manipulationFunction={(e) =>{\r\n                                        setIdTipoEvento(e.target.value)\r\n                                     }}\r\n                                    />\r\n\r\n\r\n                                    {/* Data */}\r\n                                    <Input\r\n                                        id={\"data\"}\r\n                                        name={\"data\"}\r\n                                        type={\"date\"}\r\n                                        required={\"required\"}\r\n                                        value={data}\r\n                                        manipulationFunction={\r\n                                            (e) => {\r\n                                                setData(e.target.value)\r\n                                            }\r\n                                        }\r\n                                    />\r\n\r\n                                    {/* Botao para cadastrar */}\r\n                                    <Button\r\n                                        type={\"subimit\"}\r\n                                        name={\"cadastrar\"}\r\n                                        id={\"cadastrar\"}\r\n                                        textButton={\"Cadastrar\"}\r\n                                    />\r\n\r\n\r\n\r\n                                </>)\r\n\r\n\r\n                                :\r\n\r\n\r\n                                (<>\r\n\r\n                                    {/* ******************************Editar****************************** */}\r\n\r\n\r\n                                    {/* Nome */}\r\n                                    <Input\r\n                                        id={\"id\"}\r\n                                        placeholder={\"Nome\"}\r\n                                        name={\"nome\"}\r\n                                        type={\"text\"}\r\n                                        required={\"required\"}\r\n                                        value={nome}\r\n                                        manipulationFunction={\r\n                                            (e) => {\r\n                                                setNome(e.target.value)\r\n                                            }\r\n                                        }\r\n                                    />\r\n                                    {/* Descricao */}\r\n                                    <Input\r\n                                        id={\"id\"}\r\n                                        placeholder={\"Descricao\"}\r\n                                        name={\"descricao\"}\r\n                                        type={\"text\"}\r\n                                        required={\"required\"}\r\n                                        value={descricao}\r\n                                        manipulationFunction={\r\n                                            (e) => {\r\n                                                setDescricao(e.target.value)\r\n                                            }\r\n                                        }\r\n                                    />\r\n\r\n                                    {/* Tipo Evento */}\r\n                                    <Select\r\n                                     id={\"id\"}\r\n                                     name={\"tipo\"}\r\n                                     required={\"required\"}\r\n                                     dados={tipoEvento}\r\n                                     defaultValue={idTipoEvento}\r\n                                     manipulationFunction={(e) =>{\r\n                                        setIdTipoEvento(e.target.value)\r\n                                     }}\r\n                                    />\r\n\r\n\r\n                                    {/* Data */}\r\n                                    <Input\r\n                                        id={\"data\"}\r\n                                        name={\"data\"}\r\n                                        type={\"date\"}\r\n                                        required={\"required\"}\r\n                                        value={data}\r\n                                        manipulationFunction={\r\n                                            (e) => {\r\n                                                setData(e.target.value)\r\n                                            }\r\n                                        }\r\n                                    />\r\n\r\n                                    <div className=\"buttons-editbox\">\r\n                                        <Button\r\n                                            textButton=\"Atualizar\"\r\n                                            type=\"subimit\"\r\n                                            name=\"atualizar\"\r\n                                            id=\"atualizar\"\r\n                                            addidionalClass=\"button-component--middle\"\r\n                                        />\r\n\r\n\r\n                                        <Button\r\n                                            textButton=\"Cancelar\"\r\n                                            type=\"button\"\r\n                                            name=\"cancelar\"\r\n                                            id=\"cancelar\"\r\n                                            manipulationFunction={editActionAbort}\r\n                                            addidionalClass=\"button-component--middle\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                </>)}\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </section>\r\n\r\n\r\n\r\n\r\n            <section className=\"lista-eventos-section\">\r\n                <Container>\r\n                    <Title\r\n                        titleText={\"Lista de eventos\"}\r\n                        color='white'\r\n                    />\r\n\r\n                    <TableE\r\n                        dados={eventos}\r\n                        fnUpdate={showUpdateForm}\r\n                        fnDelete={handleDelete}\r\n                    />\r\n                </Container>\r\n            </section>\r\n\r\n\r\n        </MainContent>\r\n    );\r\n};\r\n\r\nexport default EventosPage;","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\TipoEventosPage\\TipoEventosPage.jsx",["181","182"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Title from \"../../Components/Title/Title\";\r\nimport \"./TipoEventosPage.css\";\r\nimport MainContent from \"../../Components/MainContent/MainContent\";\r\nimport ImageIllustrator from '../../Components/ImageIllustrator/ImageIllustrator';\r\n\r\nimport eventTypeImage from '../../assets/images/tipo-evento.svg'\r\nimport Container from \"../../Components/Container/Container\";\r\nimport { Input } from \"../../Components/FormComponents/FormComponents\";\r\nimport { Button } from \"../../Components/FormComponents/FormComponents\";\r\nimport api from \"../../Services/Service\";\r\nimport TableTp from \"./TableTp/TableTp\";\r\nimport Notification from \"../../Components/Notification/Notification\";\r\nimport Spinner from \"../../Components/Spinner/Spinner\";\r\n\r\nconst TipoEventosPage = () => {\r\n\r\n\r\n\r\n    const [frmEdit, setFrmEdit] = useState(false);\r\n    const [titulo, setTitulo] = useState(\"\");\r\n    const [notifyUser, setNotifyUser] = useState({});\r\n    const [idEvento, setIdEvento] = useState(null)\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n\r\n\r\n    const [tipoEventos, setTipoEventos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //chamar a api\r\n        async function getListarTipos() {\r\n            setShowSpinner(true)\r\n            try {\r\n                const promise = await api.get(\r\n                    \"/TiposEvento\"\r\n                );\r\n                setTipoEventos(promise.data);\r\n            } catch (error) {\r\n                console.error(\"Erro : \" + error);\r\n                alert(\"Erro ao carregar os tipos de eventos\");\r\n            }\r\n            setShowSpinner(false)\r\n        }\r\n\r\n        getListarTipos();\r\n        console.log(\"A HOME FOI MONTADA!\")\r\n    }, []);\r\n\r\n    async function handleSubimit(e) {\r\n        e.preventDefault()\r\n\r\n        if (titulo.trim().length < 3) {\r\n            setNotifyUser({\r\n                titleNote: \"Aviso\",\r\n                textNote: `Ttitulo deve possuir mais de 3 caracteres`,\r\n                imgIcon: \"warning\",\r\n                imgAlt:\r\n                    \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n                showMessage: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const retorno = await api.post(\"/TiposEvento\", { titulo: titulo })\r\n            setNotifyUser({\r\n                titleNote: \"Sucesso\",\r\n                textNote: `Cadastrado com sucesso!`,\r\n                imgIcon: \"success\",\r\n                imgAlt:\r\n                    \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n                showMessage: true,\r\n            });\r\n            console.log(retorno.data);\r\n            setTitulo(\"\"); //Limpa a variavel\r\n            const retornoGet = await api.get(\"/TiposEvento\")\r\n            setTipoEventos(retornoGet.data)\r\n\r\n        } catch (error) {\r\n            console.log(\"Deu erro na api\")\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    //Atualizacao dos dados\r\n    async function handleUpdate(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const retorno = await api.put('/TiposEvento/' + idEvento, {\r\n                titulo\r\n            })\r\n            \r\n            const retornoGet = await api.get(\"/TiposEvento\")\r\n            setTipoEventos(retornoGet.data)\r\n            setTitulo(\"\"); //Limpa a variavel\r\n            setIdEvento(null)\r\n            setFrmEdit(false)\r\n\r\n        } catch (error) {\r\n            alert(\"Deu ruim\")\r\n        }\r\n    }\r\n\r\n    function editActionAbort() {\r\n        setFrmEdit(false);\r\n        setTitulo(\"\");\r\n        setIdEvento(null);\r\n    }\r\n\r\n    async function showUpdateForm(idElemento) {\r\n        setFrmEdit(true);\r\n        //Fazer um get para pegar os dados\r\n        \r\n        try {\r\n            const retorno = await api.get('/TiposEvento/'+ idElemento)\r\n            setTitulo(retorno.data.titulo)\r\n            setIdEvento(retorno.data.idTipoEvento)\r\n        } catch (error) {\r\n            alert(\"Nao foi possivel mostrar a tela de edicao. Tente novamente\")\r\n            console.log(error);\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    async function handleDelete(idTipoEvento) {\r\n        try {\r\n            const retorno = await api.delete(`/TiposEvento/${idTipoEvento}`)\r\n            const retornoGet = await api.get(\"/TiposEvento\")\r\n            setTipoEventos(retornoGet.data)\r\n            setNotifyUser({\r\n                titleNote: \"Sucesso\",\r\n                textNote: `Deletado com sucesso!`,\r\n                imgIcon: \"success\",\r\n                imgAlt:\r\n                    \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n                showMessage: true,\r\n            });\r\n        } catch (error) {\r\n            console.log(\"Erro ao excluir\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <MainContent>\r\n            <Notification {...notifyUser} setNotifyUser={setNotifyUser} />\r\n            { showSpinner ? <Spinner/> : null}\r\n            {/* CADASTRO */}\r\n            <section className=\"cadastro-evento-section\">\r\n                <Container>\r\n                    <div className=\"cadastro-evento__box\">\r\n                        <Title titleText={\"Página Tipos de Evento\"} />\r\n                        <ImageIllustrator\r\n                            alterText={\"??????\"}\r\n                            imageRender={eventTypeImage}\r\n                        />\r\n\r\n                        <form className=\"ftipo-evento\" onSubmit={frmEdit ? handleUpdate : handleSubimit}>\r\n\r\n                            {!frmEdit ?\r\n                                (<>\r\n                                    {/* Cadastrar */}\r\n                                    <Input\r\n                                        id={\"id\"}\r\n                                        placeholder={\"Titulo\"}\r\n                                        name={\"titulo\"}\r\n                                        type={\"text\"}\r\n                                        required={\"required\"}\r\n                                        value={titulo}\r\n                                        manipulationFunction={\r\n                                            (e) => {\r\n                                                setTitulo(e.target.value)\r\n                                            }\r\n                                        }\r\n\r\n                                    />\r\n\r\n\r\n                                    <Button\r\n                                        type={\"subimit\"}\r\n                                        name={\"cadastrar\"}\r\n                                        id={\"cadastrar\"}\r\n                                        textButton={\"Cadastrar\"}\r\n                                    />\r\n\r\n                                </>)\r\n                                :\r\n                                (<>\r\n\r\n                                    <Input\r\n                                        id=\"titulo\"\r\n                                        placeholder=\"Titulo\"\r\n                                        name=\"titulo\"\r\n                                        type=\"text\"\r\n                                        required=\"required\"\r\n                                        value={titulo}\r\n                                        manipulationFunction={(e) => {\r\n                                            setTitulo(e.target.value)\r\n                                        }}\r\n                                    />\r\n\r\n                                    <div className=\"buttons-editbox\">\r\n                                        <Button \r\n                                        textButton=\"Atualizar\"\r\n                                        type=\"subimit\"\r\n                                        name=\"atualizar\"\r\n                                        id=\"atualizar\"\r\n                                        addidionalClass=\"button-component--middle\"\r\n                                        />\r\n\r\n\r\n                                        <Button\r\n                                        textButton=\"Cancelar\"\r\n                                        type=\"button\"\r\n                                        name=\"cancelar\"\r\n                                        id=\"cancelar\"\r\n                                        manipulationFunction={editActionAbort}\r\n                                        addidionalClass=\"button-component--middle\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                </>)\r\n\r\n                            }\r\n                            {/* Atualizar */}\r\n\r\n                            {/* <Input\r\n                                id={\"id\"}\r\n                                placeholder={\"Titulo\"}\r\n                                name={\"titulo\"}\r\n                                type={\"text\"}\r\n                                required={\"required\"}\r\n                                value={\"\"}\r\n\r\n                            /> */}\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </section>\r\n\r\n\r\n            {/* LISTAGEM DE TIPO DE EVENTOS */}\r\n            <section className=\"lista-eventos-section\">\r\n                <Container>\r\n                    <Title titleText={\"Lista de Tipo de Eventos\"} color=\"white\" />\r\n\r\n                    <TableTp\r\n                        dados={tipoEventos}\r\n                        fnUpdate={showUpdateForm}\r\n                        fnDelete={handleDelete}\r\n                    />\r\n\r\n\r\n                </Container>\r\n            </section>\r\n        </MainContent>\r\n    );\r\n};\r\n\r\nexport default TipoEventosPage;","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Header\\Header.jsx",[],[],["183"],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Footer\\Footer.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Input\\Input.jsx",["184"],[],"import React, { useState } from \"react\";\r\n\r\nconst Input = (props) => {//construtor\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <input \r\n            type={props.tipo} \r\n            id={props.id} \r\n            name={props.nome} \r\n            placeholder={props.dicaCampo} \r\n            value={props.valor}\r\n            onChange={(e)=>{\r\n              props.fnAltera(e.target.value)//valor do input\r\n            }}\r\n        />\r\n        <span>{props.valor}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n",["185"],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Button\\Button.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Nav\\Nav.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Container\\Container.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\PerfilUsuario\\PerfilUsuario.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Title\\Title.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\MainContent\\MainContent.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Banner\\Banner.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\ContactSection\\ContactSection.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\VisionSection\\VisionSection.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\NextEvent\\NextEvent.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Utils\\stringFunction.js",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Services\\Service.js",["186"],[],"import axios from \"axios\";\r\n\r\nconst apiPort = \"5000\";\r\nconst localApi = `http://localhost:${apiPort}/api`\r\nconst externaApi = null\r\n\r\nconst api = axios.create({\r\n    baseURL : localApi\r\n});\r\n\r\nexport default api;","C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\ImageIllustrator\\ImageIllustrator.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\FormComponents\\FormComponents.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\TipoEventosPage\\TableTp\\TableTp.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Notification\\Notification.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Components\\Spinner\\Spinner.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Pages\\EventosPage\\TableE\\TableE.jsx",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\context\\AuthContext.js",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Routes\\routes.js",[],[],"C:\\Users\\43869817801\\Desktop\\Segundo-Semestre-Senai\\Sprint-Js-React\\React\\eventplus\\src\\Routes\\PrivateRoute.jsx",[],[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":10,"column":6,"nodeType":"191","endLine":10,"endColumn":8,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":13,"column":10,"nodeType":"195","messageId":"196","endLine":13,"endColumn":18},{"ruleId":"187","replacedBy":"197"},{"ruleId":"189","severity":1,"message":"198","line":22,"column":8,"nodeType":"191","endLine":22,"endColumn":18,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":106,"column":25,"nodeType":"202","endLine":106,"endColumn":64},{"ruleId":"193","severity":1,"message":"203","line":27,"column":27,"nodeType":"195","messageId":"196","endLine":27,"endColumn":43},{"ruleId":"193","severity":1,"message":"204","line":63,"column":19,"nodeType":"195","messageId":"196","endLine":63,"endColumn":26},{"ruleId":"193","severity":1,"message":"204","line":168,"column":19,"nodeType":"195","messageId":"196","endLine":168,"endColumn":26},{"ruleId":"193","severity":1,"message":"204","line":92,"column":19,"nodeType":"195","messageId":"196","endLine":92,"endColumn":26},{"ruleId":"193","severity":1,"message":"204","line":136,"column":19,"nodeType":"195","messageId":"196","endLine":136,"endColumn":26},{"ruleId":"187","replacedBy":"205"},{"ruleId":"193","severity":1,"message":"206","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"187","replacedBy":"207"},{"ruleId":"193","severity":1,"message":"208","line":5,"column":7,"nodeType":"195","messageId":"196","endLine":5,"endColumn":17},"no-new-object",["209"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCalculation' needs the current value of 'count'.","ArrayExpression",["210"],"no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar",["209"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["211"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setIdInstituicao' is assigned a value but never used.","'retorno' is assigned a value but never used.",["209"],"'useState' is defined but never used.",["209"],"'externaApi' is assigned a value but never used.","no-object-constructor",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [count]",{"range":"216","text":"217"},"Update the dependencies array to be: [navigate, userData]",{"range":"218","text":"219"},[262,264],"[count]",[870,880],"[navigate, userData]"]